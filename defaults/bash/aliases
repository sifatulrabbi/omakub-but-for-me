# File system
alias ls='eza -lh --group-directories-first --icons=auto'
alias la='eza -Alh --group-directories-first --icons=auto'
alias lsa='ls -a'
alias lt='eza --tree --level=2 --long --icons --git'
alias lta='lt -a'
alias ff="fzf --preview 'batcat --style=numbers --color=always {}'"
alias fd='fdfind'
alias sosh='source $HOME/.bashrc'

# Directories
alias ...='cd ../..'
alias ....='cd ../../..'

# Tools
alias n='nvim'
alias g='git'
alias d='docker'
alias bat='batcat'
alias lg='lazygit'
alias ld='lazydocker'

# Compression
compress() { tar -czf "${1%/}.tar.gz" "${1%/}"; }
alias decompress="tar -xzf"

# Convert webm files generated by the Gnome screenshot video recorder to mp4s that are more compatible
webm2mp4() {
    input_file="$1"
    output_file="${input_file%.webm}.mp4"
    ffmpeg -i "$input_file" -c:v libx264 -preset slow -crf 22 -c:a aac -b:a 192k "$output_file"
}

# Ensure that external keyboards that use an fn key has the F keys as the default
alias fix_fkeys='echo 2 | sudo tee /sys/module/hid_apple/parameters/fnmode'

# Spotify window is too large on many displays, so fix this by zooming it down
alias fix_spotify_window_size="sudo sed -i 's|^Exec=.*|Exec=spotify --force-device-scale-factor=1.5 %U|' /usr/local/share/applications/spotify.desktop"

# Function to set up a new coding project environment with tmux
# Usage: new_coding_project <projectname> <projecttype>
# projecttype: 'work' or anything else (defaults to 'personal/coding')
new_project() {
    if [ -z "$1" ]; then
        echo "Error: Project name is required."
        echo "Usage: new_coding_project <projectname> <projecttype>"
        return 1
    fi

    local project_name="$1"
    local project_type="$2"
    local dir_prefix="$HOME/coding"

    if [ "$project_type" = "work" ]; then
        dir_prefix="$HOME/work"
    fi

    local project_path="${dir_prefix}/${project_name}"
    echo "Creating directory: \"$project_path\""
    mkdir -p "$project_path"
    if [ $? -ne 0 ]; then
        echo "Error: Failed to create directory \"$project_path\"."
        return 1
    fi

    # Prevents errors if accidentally run it twice
    tmux has-session -t "$project_name" 2>/dev/null
    if [ $? -eq 0 ]; then
        echo "Error: tmux session named '$project_name' already exists."
        echo "Attach to it using: tmux attach-session -t $project_name"
        echo "Or switch using: tmux switch-client -t $project_name"
        return 1
    fi

    echo "Creating tmux session: '$project_name' in '$project_path'"
    tmux new-session -d -s "$project_name" -c "$project_path"
    if [ $? -ne 0 ]; then
        echo "Error: Failed to create tmux session '$project_name'."
        rm -rf "$project_path"
        return 1
    fi

    echo "Creating 4 additional tmux windows..."
    for i in {1..3}; do
        tmux new-window -t "$project_name" -c "$project_path"
        if [ $? -ne 0 ]; then
            echo "Warning: Failed to create window $i in session '$project_name'."
        fi
    done

    if [ -n "$TMUX" ]; then
        echo "Switching current tmux client to session '$project_name'..."
        tmux switch-client -t "$project_name"
    else
        echo "Attaching to tmux session '$project_name'..."
        tmux attach-session -t "$project_name"
    fi
    tmux select-window -t 1

    echo "Project '$project_name' setup complete."
    return 0
}
